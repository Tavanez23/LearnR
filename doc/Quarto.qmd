---
title: "reproducible documents"
author: "ART"
format: html
editor: visual
---

#labeling - dont include space or periods in whatever comes in the label r label

#R will load r setup first - smart to load the libraries

```{r setup}
#| message: false
#| warning: false

# we can tell the R chunck what we want/dont want to be shown after render

library(tidyverse)
library(NHANES)
nhanes_small <- read_csv(here::here("data/nhanes_small.csv"))
```

```{r}
nhanes_small
```
## Table of results

```{r mean-age-bmi-table}
nhanes_small %>%
  filter(!is.na(diabetes), !is.na(education)) %>%
  group_by(diabetes, education) %>%
  summarise(
    mean_age = mean(age, na.rm = TRUE),
    mean_bmi = mean(bmi, na.rm = TRUE)
  ) %>%
  ungroup() %>%
  knitr::kable(caption = "Mean values of Age and BMI for education and diabetes status.")
```

```{r prettier-table}
#| echo: false

nhanes_small %>%
  filter(!is.na(diabetes), !is.na(education)) %>%
  group_by(diabetes, education) %>%
  summarise(
    mean_age = mean(age, na.rm = TRUE),
    mean_bmi = mean(bmi, na.rm = TRUE)
  ) %>%
  ungroup() %>%
  mutate(
    # Task 2a.
    mean_age = round(mean_age, 1),
    mean_bmi = round(mean_bmi, 1),
    # Task 2b.
    education = str_to_sentence(education)
  ) %>%
  rename(
    # Task 3.
    "Diabetes Status" = diabetes,
    "Education" = education,
    "Mean Age" = mean_age,
    "Mean BMI" = mean_bmi
  ) %>%
  knitr::kable(caption = "Mean values of Age and BMI for each education and diabetes status.")

# images should be add outside the code chuncks
# image folder should be relative to where we have our quarto files
```



Beigeing of adipocytes in @fig-beigeing-of-adipocytes

![adipocytes](images/adipocytes.png){#fig-beigeing-of-adipocytes width="50%" height="50%"}



## Visualizing data

```{r}
# Create histogram for BMI
ggplot(nhanes_small, aes(x = bmi)) +
  geom_histogram()
```
```{r}
# Create histogram for BMI, removing the missing values

ggplot(nhanes_small, aes(x = bmi)) +
  geom_histogram(na.rm = TRUE)
```
BMI distribution in NHANES dataset visualised in @fig-bmi-histogram

```{r}
#| fig-cap: "Distribution of BMI"
#| label: fig-bmi-histogram

nhanes_small %>%
  filter(bmi <= 60) %>%
  ggplot(aes(x = bmi)) +
  geom_histogram(na.rm = TRUE)
```



```{r}
# Create count barplot for education
ggplot(nhanes_small, aes(x = education)) +
  geom_bar()
```

```{r}
# create count barplot for diabetes status
ggplot(nhanes_small, aes(x = diabetes)) +
  geom_bar()
```

```{r}
# remove NA  - removing the rows that have NA values

nhanes_small %>%
  filter(!is.na(diabetes)) %>%
  ggplot(aes(x = diabetes)) +
  geom_bar()
```

```{r}
nhanes_small %>%
  filter(!is.na(education)) %>%
  ggplot(aes(x = education)) +
  geom_bar()
```
```{r}
#| label: fig-diabetes-education
#| fig-cap: "Counts of diabetes and education in NHANES"
#| fig-subcap:
#| - "Number of those with or without diabetes."
#| - "Number of those with different educational status"
#| layout-ncol: 2

nhanes_small %>%
  filter(!is.na(diabetes)) %>%
  ggplot(aes(x = diabetes)) +
  geom_bar()

nhanes_small %>%
  filter(!is.na(education)) %>%
  ggplot(aes(x = education)) +
  geom_bar()
```

### Plotting two variables

```{r}
ggplot(nhanes_small, aes(x = bmi, y = bp_sys_ave)) +
  geom_hex(na.rm = TRUE)
```
```{r}
# Add a smoothing line with confidence interval
ggplot(nhanes_small, aes(x = bmi, y = bp_sys_ave)) +
  geom_hex(na.rm = TRUE) +
  geom_smooth(na.rm = TRUE)
```

```{r}
# Two categorical variables

nhanes_small %>%
  filter(!is.na(education), !is.na(diabetes)) %>%
  ggplot(aes(x = diabetes, fill = education)) +
  geom_bar()
```


```{r}
# "dodged" bar plot
nhanes_small %>%
  filter(!is.na(diabetes), !is.na(education)) %>%
  ggplot(aes(x = diabetes, fill = education)) +
  geom_bar(position = position_dodge())
```
### Plotting continuous and discrete variables

```{r}
# using mixed data
nhanes_small %>%
  filter(!is.na(diabetes), bmi <= 60) %>%
  ggplot(aes(x = diabetes, y = bmi)) +
  geom_violin(na.rm = TRUE)
```

## Exercise to make plots with one or two variables

```{r}
library(NHANES)
nhanes_exercise <- NHANES %>%
  rename_with(snakecase::to_snake_case) %>%
  rename(sex = gender)
```

```{r}
#| layout-ncol: 2
#| label: Age-distribution
#| fig-cap: Age distribution
#| fid-subcap:
#|   - Participants age at collection
#|   - Age of diabetes diagnosis
# Distribution of age
ggplot(nhanes_exercise, aes(x = age)) +
  geom_density(na.rm = TRUE)

# Distribution of age at diabetes diagnosis
ggplot(nhanes_exercise, aes(x = diabetes_age)) +
  geom_density(na.rm = TRUE)
```

### Plotting three or more variables 

```{r}
# Plot systolic blood pressure in relation to educational status and diabetes
nhanes_small %>%
  filter(!is.na(diabetes), !is.na(education)) %>%
  ggplot(aes(x = education, y = bp_sys_ave, colour = diabetes)) +
  geom_boxplot(na.rm = TRUE)
# colour colours only outside of the box, fill makes the box fully coloured
```
```{r}
# Plotting BMI in relation to systolic blood pressure and age

nhanes_small %>%
  ggplot(aes(x = bmi, y = bp_sys_ave, colour = age)) +
  geom_point(na.rm = TRUE)
```


```{r}
# Plot BMI in relation to systolic blood pressure and diabetes status.
nhanes_small %>%
  filter(!is.na(diabetes)) %>%
  ggplot(aes(x = bmi, y = bp_sys_ave, colour = diabetes)) +
  geom_point(na.rm = TRUE)
```
```{r}
# Plot BMI in relation to systolic blood pressure and diabetes,
# using faceting by columns

nhanes_small %>%
  filter(!is.na(diabetes)) %>%
  ggplot(aes(x = bmi, y = bp_sys_ave)) +
  geom_point(na.rm = TRUE) +
  facet_grid(cols = vars(diabetes))
```
```{r}
# Plot BMI in relation to systolic blood pressure and diabetes,
# using faceting by row

nhanes_small %>%
  filter(!is.na(diabetes)) %>%
  ggplot(aes(x = bmi, y = bp_sys_ave)) +
  geom_point(na.rm = TRUE) +
  facet_grid(rows = vars(diabetes))
```
```{r}
# Plot BMI in relation to systolic blood pressure, diabetes status, educational
# status and age

nhanes_small %>%
  filter(!is.na(diabetes), !is.na(education)) %>%
  ggplot(aes(x = bmi, y = bp_sys_ave, colour = age)) +
  geom_point(na.rm = TRUE) +
  facet_grid(
    rows = vars(diabetes),
    cols = vars(education)
  )
```
